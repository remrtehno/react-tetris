import {fullRowDetect} from "../fullRowDetecting";

describe("Detect Full Row", () => {

  it('Full 19 row', () => {
    const result = fullRowDetect([[0,19],[1,19],[2,19],[3,19],[4,19],[5,19],[6,19],[7,19],[8,19],[9,19],[1,18],[2,18],[8,6],[2,5]]);
    expect(result).toEqual([[1,18],[2,18],[8,6],[2,5]]);
  })

  it('Full 19 and 10 row', () => {
    const result = fullRowDetect([[0,19],[1,19],[2,19],[3,19],[4,19],[5,19],[6,19],[7,19],[8,19],[9,19],[1,18],[2,18],[8,6],[2,5], [0,10],[1,10],[2,10],[3,10],[4,10],[5,10],[6,10],[7,10],[8,10],[9,10]]);
    expect(result).toEqual([[1,18],[2,18],[8,6],[2,5]]);
  });

  it('Full 19 and 10 and 18 row', () => {
    const result = fullRowDetect([[0,19],[1,19],[2,19],[3,19],[4,19],[5,19],[6,19],[7,19],[8,19],[9,19],[1,18],[2,18],[8,6],[2,5], [0,10],[1,10],[2,10],[3,10],[4,10],[5,10],[6,10],[7,10],[8,10],[9,10], [3,18], [0,18], [3,4], [4,18], [9,99],[5,18], [6,18], [7,18], [8,18], [9,18]]);
    expect(result).toEqual([[8,6],[2,5],[3,4],[9,99],]);
  });

});
